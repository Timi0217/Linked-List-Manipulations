Hello, odayok01. Your last provide for hw2:

odayok01.1.log
odayok01.2.log
odayok01.3.log
odayok01.4.log
odayok01.5.log
file name:/comp/15/grading/hw2/odayok01.5.log
provide started by odayok01 on Fri Feb 10 00:26:51 2017
Hello, odayok01<Oluwatimilehin A. Dayo-Kayode>!
Handling exceptions for odayok01<Oluwatimilehin A. Dayo-Kayode>
    new duedate is 2/11
    new duetime is 5:00am
    new submission limit is 6
Receiving solution to 'hw2' in class 'comp15'.
Checking all files:
    CharLinkedList.h (3240 bytes)
    CharLinkedList.cpp (8906 bytes)
    testCharLinkedList.cpp (2127 bytes)
    Makefile (4882 bytes)
    README (1483 bytes)
Total size of files is 20638 bytes.
This is submission 5 of assignment hw2 in class 'comp15'.

Are you ready to provide these for testing (yes or no)? 
    copying file 'CharLinkedList.h'
    copying file 'CharLinkedList.cpp'
    copying file 'testCharLinkedList.cpp'
    copying file 'Makefile'
    copying file 'README'
Preparing for testing...

//@@ ======== SUBMISSION SCREENING START ========
//@@ odayok01 submitting from /dev/pts/8 on vm-hw02
//@@                       at 2017-02-10 00:26:56


3 : Checking for valid userid...




Your homework is on time. Nice work.

  8: Checking required files
     OK        CharLinkedList.h
     OK        CharLinkedList.cpp
     OK        testCharLinkedList.cpp
     OK        README

  9: Checking if files are correct type
     OK        CharLinkedList.cpp
     OK        testCharLinkedList.cpp

 10: Checking if files are correct type
     OK        CharLinkedList.h

 11: Checking if files are correct type
     OK        README


"Running tests. This might take a while. Please be patient..."

Checking Files...
Making submitted tests
No errors!
No warnings!
********** Testing main01.cpp **********
// Tests the constructors and destructor and print
main01.cpp Passed!
Running valgrind to check for memory leaks.
No memory leaks!
********** Done Testing main01.cpp **********

********** Testing main02.cpp **********
// Tests the second constructor
main02.cpp Passed!
Running valgrind to check for memory leaks.
No memory leaks!
********** Done Testing main02.cpp **********

********** Testing main03.cpp **********
// Tests the third constructor
main03.cpp Failed!
//---------- test program code: main03.cpp ----------
// Tests the third constructor

//
// COMP15 HW2 TEST 3
// Tests the third constructor
//
// Created by vbilol01 on 12/26/16.
//

#include "CharLinkedList.h"
#include <iostream>

int main() {
    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    //test char array constructor
    std::cout << "Testing Third Constructor (char array)\n";

    CharLinkedList linkedListOne(comp, 6);

    //should print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListOne.print();

    CharLinkedList linkedListTwo(comp, 4);

    //should print - [CharLinkedList of size 4 <<COMP>>]
    linkedListTwo.print();

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main03.cpp (first 5000 characters): 
Testing Third Constructor (char array)
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 4 <<COMP>>]
//---------- End of expected output for main03.cpp.

//---------- Your output for main03.cpp (first 5000 characters): 
Testing Third Constructor (char array)
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 4 <<COMP>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main03.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main03.cpp (first 5000 characters): 
3a4,6
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main03.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30830==    by 0x401309: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:47)
==30830==    by 0x40242C: main (main03.cpp:19)
==30830== 
==30830== 24 bytes in 1 blocks are still reachable in loss record 2 of 7
==30830==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30830==    by 0x401326: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:49)
==30830==    by 0x40242C: main (main03.cpp:19)
==30830== 
==30830== 24 bytes in 1 blocks are still reachable in loss record 3 of 7
==30830==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30830==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==30830==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==30830==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==30830==    by 0x40244C: main (main03.cpp:24)
==30830== 
==30830== 43 bytes in 1 blocks are possibly lost in loss record 4 of 7
==30830==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30830==    by 0x4EFF798: allocate (new_allocator.h:104)
==30830==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==30830==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==30830==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==30830==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==30830==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==30830==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==30830==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==30830==    by 0x401833: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==30830==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==30830==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==30830==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==30830==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==30830==    by 0x40246F: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==30830== 
==30830== 96 bytes in 4 blocks are still reachable in loss record 5 of 7
==30830==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30830==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==30830==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==30830==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==30830==    by 0x40242C: main (main03.cpp:19)
==30830== 
==30830== 144 bytes in 1 blocks are possibly lost in loss record 6 of 7
==30830==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==30830==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==30830==    by 0x40181D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==30830==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==30830==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==30830==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==30830==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==30830==    by 0x40246F: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==30830== 
==30830== 72,704 bytes in 1 blocks are still reachable in loss record 7 of 7
==30830==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==30830==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==30830==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==30830==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==30830==    by 0x400F1E2: call_init (dl-init.c:82)
==30830==    by 0x400F1E2: _dl_init (dl-init.c:131)
==30830==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==30830== 
==30830== LEAK SUMMARY:
==30830==    definitely lost: 0 bytes in 0 blocks
==30830==    indirectly lost: 0 bytes in 0 blocks
==30830==      possibly lost: 187 bytes in 2 blocks
==30830==    still reachable: 72,872 bytes in 8 blocks
==30830==                       of which reachable via heuristic:
==30830==                         stdstring          : 43 bytes in 1 blocks
==30830==         suppressed: 0 bytes in 0 blocks
==30830== 
==30830== For counts of detected and suppressed errors, rerun with: -v
==30830== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main03.cpp **********

********** Testing main04.cpp **********
// Tests isEmpty()
main04.cpp Passed!
Running valgrind to check for memory leaks.
No memory leaks!
********** Done Testing main04.cpp **********

********** Testing main05.cpp **********
// Tests clear()
main05.cpp Failed!
//---------- test program code: main05.cpp ----------
// Tests clear()

//
// COMP15 HW2 TEST 5
// Tests clear()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    //test clear()
    std::cout << "Testing clear\n";

    CharLinkedList linkedListZero;
    linkedListZero.clear();

    //should print - 1;
    std::cout << linkedListZero.isEmpty() << std::endl;

    //should print - 1
    CharLinkedList linkedListOne('T');
    linkedListOne.clear();
    std::cout << linkedListOne.isEmpty() << std::endl;

    //should print - 1
    CharLinkedList linkedListTwo(comp, 6);
    linkedListTwo.clear();
    std::cout << linkedListTwo.isEmpty() << std::endl;

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main05.cpp (first 5000 characters): 
Testing clear
1
1
1
//---------- End of expected output for main05.cpp.

//---------- Your output for main05.cpp (first 5000 characters): 
Testing clear
1
1
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main05.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main05.cpp (first 5000 characters): 
4c4,6
< 1
---
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main05.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
d: ./hw2
==30975== 
Testing clear
1
1
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
==30975== 
==30975== Process terminating with default action of signal 6 (SIGABRT)
==30975==    at 0x56FD1D7: raise (raise.c:56)
==30975==    by 0x56FE8C7: abort (abort.c:90)
==30975==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==30975==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==30975==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==30975==    by 0x4EC0B68: __cxa_throw (eh_throw.cc:87)
==30975==    by 0x4018AB: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==30975==    by 0x401595: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==30975==    by 0x401B56: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==30975==    by 0x4014F1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==30975==    by 0x402571: main (main05.cpp:33)
==30975== 
==30975== HEAP SUMMARY:
==30975==     in use at exit: 72,939 bytes in 5 blocks
==30975==   total heap usage: 11 allocs, 6 frees, 73,091 bytes allocated
==30975== 
==30975== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==30975==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30975==    by 0x4EFF798: allocate (new_allocator.h:104)
==30975==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==30975==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==30975==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==30975==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==30975==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==30975==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
== 30975==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==30975==    by 0x401883: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==30975==    by 0x401595: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==30975==    by 0x401B56: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==30975==    by 0x4014F1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==30975==    by 0x402571: main (main05.cpp:33)
==30975== 
==30975== 48 bytes in 2 blocks are still reachable in loss record 2 of 4
==30975==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==30975==    by 0x401BFE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==30975==    by 0x401483: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==30975==    by 0x4013EC: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==30975==    by 0x402560: main (main05.cpp:32)
==30975== 
==30975== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==30975==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==30975==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==30975==    by 0x40186D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==30975==    by 0x401595: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==30975==    by 0x401B56: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==30975==    by 0x4014F1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==30975==    by 0x402571: main (main05.cpp:33)
==30975== 
==30975== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==30975==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==30975==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==30975==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==30975==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==30975==    by 0x400F1E2: call_init (dl-init.c:82)
==30975==    by 0x400F1E2: _dl_init (dl-init.c:131)
==30975==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==30975== 
==30975== LEAK SUMMARY:
==30975==    definitely lost: 0 bytes in 0 blocks
==30975==    indirectly lost: 0 bytes in 0 blocks
==30975==      possibly lost: 187 bytes in 2 blocks
==30975==    still reachable: 72,752 bytes in 3 blocks
==30975==                       of which reachable via heuristic:
==30975==                         stdstring          : 43 bytes in 1 blocks
==30975==         suppressed: 0 bytes in 0 blocks
==30975== 
==30975== For counts of detected and suppressed errors, rerun with: -v
==30975== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main05.cpp **********

********** Testing main06.cpp **********
// Tests size()
main06.cpp Failed!
//---------- test program code: main06.cpp ----------
// Tests size()

//
// COMP15 HW2 TEST 6
// Tests size()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    //test size()
    std::cout << "Testing size()\n";

    CharLinkedList linkedListZero;

    //should print - 0
    std::cout << linkedListZero.size() << std::endl;

    //should print - 1
    CharLinkedList linkedListOne('T');
    std::cout << linkedListOne.size() << std::endl;

    //should print - 6
    CharLinkedList linkedListTwo(comp, 6);
    std::cout << linkedListTwo.size() << std::endl;

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main06.cpp (first 5000 characters): 
Testing size()
0
1
6
//---------- End of expected output for main06.cpp.

//---------- Your output for main06.cpp (first 5000 characters): 
Testing size()
0
1
6
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main06.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main06.cpp (first 5000 characters): 
4a5,7
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main06.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
e_handler() (vterminate.cc:95)
==31080==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31080==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31080==    by 0x40239E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31080==    by 0x401468: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31080==    by 0x402554: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31080== 
==31080== HEAP SUMMARY:
==31080==     in use at exit: 72,963 bytes in 6 blocks
==31080==   total heap usage: 11 allocs, 5 frees, 73,091 bytes allocated
==31080== 
==31080== 24 bytes in 1 blocks are still reachable in loss record 1 of 5
==31080==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31080==    by 0x401298: CharLinkedList::firstNode(char) (CharLinkedList.cpp:96)
==31080==    by 0x401265: CharLinkedList::CharLinkedList(char) (CharLinkedList.cpp:37)
==31080==    by 0x40247D: main (main06.cpp:26)
==31080== 
==31080== 43 bytes in 1 blocks are possibly lost in loss record 2 of 5
==31080==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31080==    by 0x4EFF798: allocate (new_allocator.h:104)
==31080==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31080==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31080==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31080==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31080==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31080==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31080==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31080==    by 0x401833: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31080==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31080==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31080==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31080==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31080==    by 0x402554: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31080== 
==31080== 48 bytes in 2 blocks are still reachable in loss record 3 of 5
==31080==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31080==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31080==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31080==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31080==    by 0x4024E8: main (main06.cpp:30)
==31080== 
==31080== 144 bytes in 1 blocks are possibly lost in loss record 4 of 5
==31080==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31080==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31080==    by 0x40181D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31080==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31080==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31080==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31080==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31080==    by 0x402554: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31080== 
==31080== 72,704 bytes in 1 blocks are still reachable in loss record 5 of 5
==31080==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31080==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31080==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31080==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31080==    by 0x400F1E2: call_init (dl-init.c:82)
==31080==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31080==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31080== 
==31080== LEAK SUMMARY:
==31080==    definitely lost: 0 bytes in 0 blocks
==31080==    indirectly lost: 0 bytes in 0 blocks
==31080==      possibly lost: 187 bytes in 2 blocks
==31080==    still reachable: 72,776 bytes in 4 blocks
==31080==                       of which reachable via heuristic:
==31080==                         stdstring          : 43 bytes in 1 blocks
==31080==         suppressed: 0 bytes in 0 blocks
==31080== 
==31080== For counts of detected and suppressed errors, rerun with: -v
==31080== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main06.cpp **********

********** Testing main07.cpp **********
// Tests first()
main07.cpp Failed!
//---------- test program code: main07.cpp ----------
// Tests first()

//
// COMP15 HW2 TEST 7
// Tests first()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    //test first()
    std::cout << "Testing first\n";

    //should print - C
    CharLinkedList linkedListOne(comp, 6);
    std::cout << linkedListOne.first() << std::endl;

    //Should print - linkedList_is_empty
    CharLinkedList linkedListTwo;
    try {
        std::cout << linkedListTwo.first() << std::endl;
    } catch(std::runtime_error) {
        std::cout << "linkedList_is_empty\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }
    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main07.cpp (first 5000 characters): 
Testing first
C
linkedList_is_empty
//---------- End of expected output for main07.cpp.

//---------- Your output for main07.cpp (first 5000 characters): 
Testing first
C
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
linkedList_is_empty
GOT SIGNAL 6 ./hw2
//---------- End of your output for main07.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main07.cpp (first 5000 characters): 
2a3,4
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
3a6
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main07.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
31126== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31126== Command: ./hw2
==31126== 
Testing first
C
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
linkedList_is_empty
==31126== 
==31126== Process terminating with default action of signal 6 (SIGABRT)
==31126==    at 0x56FD1D7: raise (raise.c:56)
==31126==    by 0x56FE8C7: abort (abort.c:90)
==31126==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31126==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31126==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31126==    by 0x4024BE: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31126==    by 0x401588: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31126==    by 0x4026BC: main (main07.cpp:34)
==31126== 
==31126== HEAP SUMMARY:
==31126==     in use at exit: 72,939 bytes in 5 blocks
==31126==   total heap usage: 12 allocs, 7 frees, 73,253 bytes allocated
==31126== 
==31126== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==31126==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31126==    by 0x4EFF798: allocate (new_allocator.h:104)
==31126==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31126==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31126==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31126==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31126==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31126==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31126==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31126==    by 0x401953: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31126==    by 0x401665: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31126==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31126==    by 0x4015C1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31126==    by 0x401570: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31126==    by 0x4026BC: main (main07.cpp:34)
==31126== 
==31126== 48 bytes in 2 blocks are still reachable in loss record 2 of 4
==31126==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31126==    by 0x401CCE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31126==    by 0x401553: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31126==    by 0x4014BC: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31126==    by 0x402555: main (main07.cpp:21)
==31126== 
==31126== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31126==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31126==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31126==    by 0x40193D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31126==    by 0x401665: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31126==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31126==    by 0x4015C1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31126==    by 0x401570: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31126==    by 0x4026BC: main (main07.cpp:34)
==31126== 
==31126== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31126==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31126==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31126==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31126==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31126==    by 0x400F1E2: call_init (dl-init.c:82)
==31126==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31126==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31126== 
==31126== LEAK SUMMARY:
==31126==    definitely lost: 0 bytes in 0 blocks
==31126==    indirectly lost: 0 bytes in 0 blocks
==31126==      possibly lost: 187 bytes in 2 blocks
==31126==    still reachable: 72,752 bytes in 3 blocks
==31126==                       of which reachable via heuristic:
==31126==                         stdstring          : 43 bytes in 1 blocks
==31126==         suppressed: 0 bytes in 0 blocks
==31126== 
==31126== For counts of detected and suppressed errors, rerun with: -v
==31126== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main07.cpp **********

********** Testing main08.cpp **********
// Tests last()
main08.cpp Failed!
//---------- test program code: main08.cpp ----------
// Tests last()

//
// COMP15 HW2 TEST 8
// Tests last()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    //test last()
    std::cout << "Testing last\n";

    //should print - 5
    CharLinkedList linkedListOne(comp, 6);
    std::cout << linkedListOne.last() << std::endl;

    //Should print - linkedList_is_empty
    CharLinkedList linkedListTwo;
    try {
        std::cout << linkedListTwo.last() <<std::endl;
    } catch(std::runtime_error) {
        std::cout << "linkedList_is_empty\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }
    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main08.cpp (first 5000 characters): 
Testing last
5
linkedList_is_empty
//---------- End of expected output for main08.cpp.

//---------- Your output for main08.cpp (first 5000 characters): 
Testing last
5
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
linkedList_is_empty
GOT SIGNAL 6 ./hw2
//---------- End of your output for main08.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main08.cpp (first 5000 characters): 
2a3,4
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
3a6
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main08.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
=31172== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31172== Command: ./hw2
==31172== 
Testing last
5
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
linkedList_is_empty
==31172== 
==31172== Process terminating with default action of signal 6 (SIGABRT)
==31172==    at 0x56FD1D7: raise (raise.c:56)
==31172==    by 0x56FE8C7: abort (abort.c:90)
==31172==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31172==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31172==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31172==    by 0x4024BE: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31172==    by 0x401588: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31172==    by 0x4026BC: main (main08.cpp:34)
==31172== 
==31172== HEAP SUMMARY:
==31172==     in use at exit: 72,939 bytes in 5 blocks
==31172==   total heap usage: 12 allocs, 7 frees, 73,253 bytes allocated
==31172== 
==31172== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==31172==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31172==    by 0x4EFF798: allocate (new_allocator.h:104)
==31172==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31172==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31172==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31172==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31172==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31172==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31172==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31172==    by 0x401953: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31172==    by 0x401665: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31172==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31172==    by 0x4015C1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31172==    by 0x401570: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31172==    by 0x4026BC: main (main08.cpp:34)
==31172== 
==31172== 48 bytes in 2 blocks are still reachable in loss record 2 of 4
==31172==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31172==    by 0x401CCE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31172==    by 0x401553: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31172==    by 0x4014BC: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31172==    by 0x402555: main (main08.cpp:21)
==31172== 
==31172== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31172==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31172==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31172==    by 0x40193D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31172==    by 0x401665: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31172==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31172==    by 0x4015C1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31172==    by 0x401570: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31172==    by 0x4026BC: main (main08.cpp:34)
==31172== 
==31172== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31172==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31172==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31172==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31172==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31172==    by 0x400F1E2: call_init (dl-init.c:82)
==31172==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31172==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31172== 
==31172== LEAK SUMMARY:
==31172==    definitely lost: 0 bytes in 0 blocks
==31172==    indirectly lost: 0 bytes in 0 blocks
==31172==      possibly lost: 187 bytes in 2 blocks
==31172==    still reachable: 72,752 bytes in 3 blocks
==31172==                       of which reachable via heuristic:
==31172==                         stdstring          : 43 bytes in 1 blocks
==31172==         suppressed: 0 bytes in 0 blocks
==31172== 
==31172== For counts of detected and suppressed errors, rerun with: -v
==31172== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main08.cpp **********

********** Testing main09.cpp **********
// Tests elementAt()
main09.cpp Failed!
//---------- test program code: main09.cpp ----------
// Tests elementAt()

//
// COMP15 HW2 TEST 9
// Tests elementAt()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    //test elementAt()
    std::cout << "Testing last\n";

    //should print - C
    CharLinkedList linkedListOne(comp, 6);
    std::cout << linkedListOne.elementAt(0) << std::endl;

    //should print - M
    std::cout << linkedListOne.elementAt(2) << std::endl;

    //should print - 5
    std::cout << linkedListOne.elementAt(5) << std::endl;

    //Should print - index_out_of_range
    try {
        std::cout << linkedListOne.elementAt(linkedListOne.size() + 1)
                  << std::endl;
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }
    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main09.cpp (first 5000 characters): 
Testing last
C
M
5
index_out_of_range
//---------- End of expected output for main09.cpp.

//---------- Your output for main09.cpp (first 5000 characters): 
Testing last
C
M
5
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main09.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main09.cpp (first 5000 characters): 
4a5,6
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
5a8
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main09.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
231== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31231== Command: ./hw2
==31231== 
Testing last
C
M
5
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
==31231== 
==31231== Process terminating with default action of signal 6 (SIGABRT)
==31231==    at 0x56FD1D7: raise (raise.c:56)
==31231==    by 0x56FE8C7: abort (abort.c:90)
==31231==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31231==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31231==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31231==    by 0x40250E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31231==    by 0x4015D8: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31231==    by 0x4027AC: main (main09.cpp:40)
==31231== 
==31231== HEAP SUMMARY:
==31231==     in use at exit: 72,939 bytes in 5 blocks
==31231==   total heap usage: 12 allocs, 7 frees, 73,254 bytes allocated
==31231== 
==31231== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==31231==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31231==    by 0x4EFF798: allocate (new_allocator.h:104)
==31231==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31231==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31231==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31231==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31231==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31231==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31231==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31231==    by 0x4019A3: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31231==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31231==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31231==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31231==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31231==    by 0x4027AC: main (main09.cpp:40)
==31231== 
==31231== 48 bytes in 2 blocks are still reachable in loss record 2 of 4
==31231==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31231==    by 0x401D1E: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31231==    by 0x4015A3: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31231==    by 0x40150C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31231==    by 0x402599: main (main09.cpp:21)
==31231== 
==31231== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31231==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31231==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31231==    by 0x40198D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31231==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31231==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31231==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31231==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31231==    by 0x4027AC: main (main09.cpp:40)
==31231== 
==31231== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31231==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31231==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31231==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31231==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31231==    by 0x400F1E2: call_init (dl-init.c:82)
==31231==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31231==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31231== 
==31231== LEAK SUMMARY:
==31231==    definitely lost: 0 bytes in 0 blocks
==31231==    indirectly lost: 0 bytes in 0 blocks
==31231==      possibly lost: 187 bytes in 2 blocks
==31231==    still reachable: 72,752 bytes in 3 blocks
==31231==                       of which reachable via heuristic:
==31231==                         stdstring          : 43 bytes in 1 blocks
==31231==         suppressed: 0 bytes in 0 blocks
==31231== 
==31231== For counts of detected and suppressed errors, rerun with: -v
==31231== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main09.cpp **********

********** Testing main10.cpp **********
// Tests pushAtBack()
main10.cpp Failed!
//---------- test program code: main10.cpp ----------
// Tests pushAtBack()

//
// COMP15 HW2 TEST 10
// Tests pushAtBack()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[]     = {'C', 'O', 'M', 'P', '1', '5'};
    char fifteen[]  = {'f', 'i', 'f', 't', 'e', 'e', 'n'};
    int  compLen    = sizeof(comp)    / sizeof(char);
    int  fifteenLen = sizeof(fifteen) / sizeof(char);

    //test pushAtBack()
    std::cout << "Testing pushAtBack\n";

    CharLinkedList linkedListOne;
    for (int i = 0; i < compLen; ++i) {
        linkedListOne.pushAtBack(comp[i]);
        //prints linkedList after char is added.
        linkedListOne.print();
        // the end result should print the following lines
        // [CharLinkedList of size 1 <<C>>]
        // [CharLinkedList of size 2 <<CO>>]
        // [CharLinkedList of size 3 <<COM>>]
        // [CharLinkedList of size 4 <<COMP>>]
        // [CharLinkedList of size 5 <<COMP1>>]
        // [CharLinkedList of size 6 <<COMP15>>]
    }

    //adds enough chars to ensure expanding array
    std::cout << std::endl << "Lots of Pushes(Ensure Expansion)" << std::endl;

    for (int j = 0; j < 50; ++j) {
        for (int i = 0; i < compLen; ++i) {
            linkedListOne.pushAtBack(comp[i]);
            //prints linkedList after char is added.
            linkedListOne.print();
        }
        for (int k = 0; k < fifteenLen; ++k) {
            linkedListOne.pushAtBack(fifteen[k]);
            //prints linkedList after char is added.
            linkedListOne.print();
            // the entire output is not included below as it
            // is extremely large. It should be 650 lines.
            // starting with:
            // [CharLinkedList of size 7 <<COMP15C>>]
            // ending with:
            // [CharLinkedList of size 656 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteen>>]

        }
    }
    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main10.cpp (first 5000 characters): 
Testing pushAtBack
[CharLinkedList of size 1 <<C>>]
[CharLinkedList of size 2 <<CO>>]
[CharLinkedList of size 3 <<COM>>]
[CharLinkedList of size 4 <<COMP>>]
[CharLinkedList of size 5 <<COMP1>>]
[CharLinkedList of size 6 <<COMP15>>]

Lots of Pushes(Ensure Expansion)
[CharLinkedList of size 7 <<COMP15C>>]
[CharLinkedList of size 8 <<COMP15CO>>]
[CharLinkedList of size 9 <<COMP15COM>>]
[CharLinkedList of size 10 <<COMP15COMP>>]
[CharLinkedList of size 11 <<COMP15COMP1>>]
[CharLinkedList of size 12 <<COMP15COMP15>>]
[CharLinkedList of size 13 <<COMP15COMP15f>>]
[CharLinkedList of size 14 <<COMP15COMP15fi>>]
[CharLinkedList of size 15 <<COMP15COMP15fif>>]
[CharLinkedList of size 16 <<COMP15COMP15fift>>]
[CharLinkedList of size 17 <<COMP15COMP15fifte>>]
[CharLinkedList of size 18 <<COMP15COMP15fiftee>>]
[CharLinkedList of size 19 <<COMP15COMP15fifteen>>]
[CharLinkedList of size 20 <<COMP15COMP15fifteenC>>]
[CharLinkedList of size 21 <<COMP15COMP15fifteenCO>>]
[CharLinkedList of size 22 <<COMP15COMP15fifteenCOM>>]
[CharLinkedList of size 23 <<COMP15COMP15fifteenCOMP>>]
[CharLinkedList of size 24 <<COMP15COMP15fifteenCOMP1>>]
[CharLinkedList of size 25 <<COMP15COMP15fifteenCOMP15>>]
[CharLinkedList of size 26 <<COMP15COMP15fifteenCOMP15f>>]
[CharLinkedList of size 27 <<COMP15COMP15fifteenCOMP15fi>>]
[CharLinkedList of size 28 <<COMP15COMP15fifteenCOMP15fif>>]
[CharLinkedList of size 29 <<COMP15COMP15fifteenCOMP15fift>>]
[CharLinkedList of size 30 <<COMP15COMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 31 <<COMP15COMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 32 <<COMP15COMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 33 <<COMP15COMP15fifteenCOMP15fifteenC>>]
[CharLinkedList of size 34 <<COMP15COMP15fifteenCOMP15fifteenCO>>]
[CharLinkedList of size 35 <<COMP15COMP15fifteenCOMP15fifteenCOM>>]
[CharLinkedList of size 36 <<COMP15COMP15fifteenCOMP15fifteenCOMP>>]
[CharLinkedList of size 37 <<COMP15COMP15fifteenCOMP15fifteenCOMP1>>]
[CharLinkedList of size 38 <<COMP15COMP15fifteenCOMP15fifteenCOMP15>>]
[CharLinkedList of size 39 <<COMP15COMP15fifteenCOMP15fifteenCOMP15f>>]
[CharLinkedList of size 40 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fi>>]
[CharLinkedList of size 41 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fif>>]
[CharLinkedList of size 42 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fift>>]
[CharLinkedList of size 43 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 44 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 45 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 46 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenC>>]
[CharLinkedList of size 47 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCO>>]
[CharLinkedList of size 48 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOM>>]
[CharLinkedList of size 49 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP>>]
[CharLinkedList of size 50 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP1>>]
[CharLinkedList of size 51 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15>>]
[CharLinkedList of size 52 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15f>>]
[CharLinkedList of size 53 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fi>>]
[CharLinkedList of size 54 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fif>>]
[CharLinkedList of size 55 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fift>>]
[CharLinkedList of size 56 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 57 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 58 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 59 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenC>>]
[CharLinkedList of size 60 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCO>>]
[CharLinkedList of size 61 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOM>>]
[CharLinkedList of size 62 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP>>]
[CharLinkedList of size 63 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP1>>]
[CharLinkedList of size 64 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15>>]
[CharLinkedList of size 65 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15f>>]
[CharLinkedList of size 66 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fi>>]
[CharLinkedList of size 67 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fif>>]
[CharLinkedList of size 68 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fift>>]
[CharLinkedList of size 69 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 70 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 71 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 72 <<COMP15COMP15fifteenCOMP15fif//---------- End of expected output for main10.cpp.

//---------- Your output for main10.cpp (first 5000 characters): 
Testing pushAtBack
[CharLinkedList of size 1 <<C>>]
[CharLinkedList of size 2 <<CO>>]
[CharLinkedList of size 3 <<COM>>]
[CharLinkedList of size 4 <<COMP>>]
[CharLinkedList of size 5 <<COMP1>>]
[CharLinkedList of size 6 <<COMP15>>]

Lots of Pushes(Ensure Expansion)
[CharLinkedList of size 7 <<COMP15C>>]
[CharLinkedList of size 8 <<COMP15CO>>]
[CharLinkedList of size 9 <<COMP15COM>>]
[CharLinkedList of size 10 <<COMP15COMP>>]
[CharLinkedList of size 11 <<COMP15COMP1>>]
[CharLinkedList of size 12 <<COMP15COMP15>>]
[CharLinkedList of size 13 <<COMP15COMP15f>>]
[CharLinkedList of size 14 <<COMP15COMP15fi>>]
[CharLinkedList of size 15 <<COMP15COMP15fif>>]
[CharLinkedList of size 16 <<COMP15COMP15fift>>]
[CharLinkedList of size 17 <<COMP15COMP15fifte>>]
[CharLinkedList of size 18 <<COMP15COMP15fiftee>>]
[CharLinkedList of size 19 <<COMP15COMP15fifteen>>]
[CharLinkedList of size 20 <<COMP15COMP15fifteenC>>]
[CharLinkedList of size 21 <<COMP15COMP15fifteenCO>>]
[CharLinkedList of size 22 <<COMP15COMP15fifteenCOM>>]
[CharLinkedList of size 23 <<COMP15COMP15fifteenCOMP>>]
[CharLinkedList of size 24 <<COMP15COMP15fifteenCOMP1>>]
[CharLinkedList of size 25 <<COMP15COMP15fifteenCOMP15>>]
[CharLinkedList of size 26 <<COMP15COMP15fifteenCOMP15f>>]
[CharLinkedList of size 27 <<COMP15COMP15fifteenCOMP15fi>>]
[CharLinkedList of size 28 <<COMP15COMP15fifteenCOMP15fif>>]
[CharLinkedList of size 29 <<COMP15COMP15fifteenCOMP15fift>>]
[CharLinkedList of size 30 <<COMP15COMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 31 <<COMP15COMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 32 <<COMP15COMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 33 <<COMP15COMP15fifteenCOMP15fifteenC>>]
[CharLinkedList of size 34 <<COMP15COMP15fifteenCOMP15fifteenCO>>]
[CharLinkedList of size 35 <<COMP15COMP15fifteenCOMP15fifteenCOM>>]
[CharLinkedList of size 36 <<COMP15COMP15fifteenCOMP15fifteenCOMP>>]
[CharLinkedList of size 37 <<COMP15COMP15fifteenCOMP15fifteenCOMP1>>]
[CharLinkedList of size 38 <<COMP15COMP15fifteenCOMP15fifteenCOMP15>>]
[CharLinkedList of size 39 <<COMP15COMP15fifteenCOMP15fifteenCOMP15f>>]
[CharLinkedList of size 40 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fi>>]
[CharLinkedList of size 41 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fif>>]
[CharLinkedList of size 42 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fift>>]
[CharLinkedList of size 43 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 44 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 45 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 46 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenC>>]
[CharLinkedList of size 47 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCO>>]
[CharLinkedList of size 48 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOM>>]
[CharLinkedList of size 49 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP>>]
[CharLinkedList of size 50 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP1>>]
[CharLinkedList of size 51 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15>>]
[CharLinkedList of size 52 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15f>>]
[CharLinkedList of size 53 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fi>>]
[CharLinkedList of size 54 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fif>>]
[CharLinkedList of size 55 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fift>>]
[CharLinkedList of size 56 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 57 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 58 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 59 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenC>>]
[CharLinkedList of size 60 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCO>>]
[CharLinkedList of size 61 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOM>>]
[CharLinkedList of size 62 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP>>]
[CharLinkedList of size 63 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP1>>]
[CharLinkedList of size 64 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15>>]
[CharLinkedList of size 65 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15f>>]
[CharLinkedList of size 66 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fi>>]
[CharLinkedList of size 67 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fif>>]
[CharLinkedList of size 68 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fift>>]
[CharLinkedList of size 69 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifte>>]
[CharLinkedList of size 70 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fiftee>>]
[CharLinkedList of size 71 <<COMP15COMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteenCOMP15fifteen>>]
[CharLinkedList of size 72 <<COMP15COMP15fifteenCOMP15fif//---------- End of your output for main10.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main10.cpp (first 5000 characters): 
659a660,662
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main10.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
bort (abort.c:90)
==31362==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31362==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31362==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31362==    by 0x40239E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31362==    by 0x401468: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31362==    by 0x4025C8: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31362== 
==31362== HEAP SUMMARY:
==31362==     in use at exit: 80,739 bytes in 330 blocks
==31362==   total heap usage: 660 allocs, 330 frees, 88,667 bytes allocated
==31362== 
==31362== 43 bytes in 1 blocks are possibly lost in loss record 1 of 5
==31362==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31362==    by 0x4EFF798: allocate (new_allocator.h:104)
==31362==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31362==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31362==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31362==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31362==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31362==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31362==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31362==    by 0x401833: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31362==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31362==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31362==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31362==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31362==    by 0x4025C8: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31362== 
==31362== 144 bytes in 1 blocks are possibly lost in loss record 2 of 5
==31362==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31362==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31362==    by 0x40181D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31362==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31362==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31362==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31362==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31362==    by 0x4025C8: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31362== 
==31362== 3,600 bytes in 150 blocks are still reachable in loss record 3 of 5
==31362==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31362==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31362==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31362==    by 0x402534: main (main10.cpp:42)
==31362== 
==31362== 4,248 bytes in 177 blocks are still reachable in loss record 4 of 5
==31362==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31362==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31362==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31362==    by 0x40257F: main (main10.cpp:47)
==31362== 
==31362== 72,704 bytes in 1 blocks are still reachable in loss record 5 of 5
==31362==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31362==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31362==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31362==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31362==    by 0x400F1E2: call_init (dl-init.c:82)
==31362==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31362==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31362== 
==31362== LEAK SUMMARY:
==31362==    definitely lost: 0 bytes in 0 blocks
==31362==    indirectly lost: 0 bytes in 0 blocks
==31362==      possibly lost: 187 bytes in 2 blocks
==31362==    still reachable: 80,552 bytes in 328 blocks
==31362==                       of which reachable via heuristic:
==31362==                         stdstring          : 43 bytes in 1 blocks
==31362==         suppressed: 0 bytes in 0 blocks
==31362== 
==31362== For counts of detected and suppressed errors, rerun with: -v
==31362== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main10.cpp **********

********** Testing main11.cpp **********
// Tests pushAtFront()
main11.cpp Failed!
//---------- test program code: main11.cpp ----------
// Tests pushAtFront()
//
// COMP15 HW2 TEST 11
// Tests pushAtFront()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};
    char fifteen[7] = {'f', 'i', 'f', 't', 'e', 'e', 'n'};

    //test pushAtFront()
    std::cout << "Testing pushAtFront\n";

    CharLinkedList linkedListOne;
    for (int i = 0; i < 6; ++i) {
        linkedListOne.pushAtFront(comp[i]);
        //prints linkedList after char is added.
        linkedListOne.print();
        // the end result should print the following lines
        // [CharLinkedList of size 1 <<C>>]
        // [CharLinkedList of size 2 <<OC>>]
        // [CharLinkedList of size 3 <<MOC>>]
        // [CharLinkedList of size 4 <<PMOC>>]
        // [CharLinkedList of size 5 <<1PMOC>>]
        // [CharLinkedList of size 6 <<51PMOC>>]
    }

    //adds enough chars to ensure expanding array
    std::cout << std::endl << "Ensure Expansion" << std::endl;
    for (int j = 0; j < 50; ++j) {
        for (int i = 0; i < 6; ++i) {
            linkedListOne.pushAtFront(comp[i]);
            //prints linkedList after char is added.
            linkedListOne.print();
        }
        for (int k = 0; k < 7; ++k) {
            linkedListOne.pushAtFront(fifteen[k]);
            //prints linkedList after char is added.
            linkedListOne.print();
            // the entire output is not included below as it
            // is extremely large. It should be 650 lines.
            // starting with:
            // [CharLinkedList of size 7 <<C51PMOC>>]
            // ending with:
            // [CharLinkedList of size 656 <<neetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
        }
    }
    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main11.cpp (first 5000 characters): 
Testing pushAtFront
[CharLinkedList of size 1 <<C>>]
[CharLinkedList of size 2 <<OC>>]
[CharLinkedList of size 3 <<MOC>>]
[CharLinkedList of size 4 <<PMOC>>]
[CharLinkedList of size 5 <<1PMOC>>]
[CharLinkedList of size 6 <<51PMOC>>]

Ensure Expansion
[CharLinkedList of size 7 <<C51PMOC>>]
[CharLinkedList of size 8 <<OC51PMOC>>]
[CharLinkedList of size 9 <<MOC51PMOC>>]
[CharLinkedList of size 10 <<PMOC51PMOC>>]
[CharLinkedList of size 11 <<1PMOC51PMOC>>]
[CharLinkedList of size 12 <<51PMOC51PMOC>>]
[CharLinkedList of size 13 <<f51PMOC51PMOC>>]
[CharLinkedList of size 14 <<if51PMOC51PMOC>>]
[CharLinkedList of size 15 <<fif51PMOC51PMOC>>]
[CharLinkedList of size 16 <<tfif51PMOC51PMOC>>]
[CharLinkedList of size 17 <<etfif51PMOC51PMOC>>]
[CharLinkedList of size 18 <<eetfif51PMOC51PMOC>>]
[CharLinkedList of size 19 <<neetfif51PMOC51PMOC>>]
[CharLinkedList of size 20 <<Cneetfif51PMOC51PMOC>>]
[CharLinkedList of size 21 <<OCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 22 <<MOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 23 <<PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 24 <<1PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 25 <<51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 26 <<f51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 27 <<if51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 28 <<fif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 29 <<tfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 30 <<etfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 31 <<eetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 32 <<neetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 33 <<Cneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 34 <<OCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 35 <<MOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 36 <<PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 37 <<1PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 38 <<51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 39 <<f51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 40 <<if51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 41 <<fif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 42 <<tfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 43 <<etfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 44 <<eetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 45 <<neetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 46 <<Cneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 47 <<OCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 48 <<MOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 49 <<PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 50 <<1PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 51 <<51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 52 <<f51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 53 <<if51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 54 <<fif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 55 <<tfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 56 <<etfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 57 <<eetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 58 <<neetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 59 <<Cneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 60 <<OCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 61 <<MOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 62 <<PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 63 <<1PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 64 <<51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 65 <<f51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 66 <<if51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 67 <<fif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 68 <<tfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 69 <<etfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 70 <<eetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 71 <<neetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 72 <<Cneetfif51PMOCneetfif51PMOCneetfif51PMOCnee//---------- End of expected output for main11.cpp.

//---------- Your output for main11.cpp (first 5000 characters): 
Testing pushAtFront
[CharLinkedList of size 1 <<C>>]
[CharLinkedList of size 2 <<OC>>]
[CharLinkedList of size 3 <<MOC>>]
[CharLinkedList of size 4 <<PMOC>>]
[CharLinkedList of size 5 <<1PMOC>>]
[CharLinkedList of size 6 <<51PMOC>>]

Ensure Expansion
[CharLinkedList of size 7 <<C51PMOC>>]
[CharLinkedList of size 8 <<OC51PMOC>>]
[CharLinkedList of size 9 <<MOC51PMOC>>]
[CharLinkedList of size 10 <<PMOC51PMOC>>]
[CharLinkedList of size 11 <<1PMOC51PMOC>>]
[CharLinkedList of size 12 <<51PMOC51PMOC>>]
[CharLinkedList of size 13 <<f51PMOC51PMOC>>]
[CharLinkedList of size 14 <<if51PMOC51PMOC>>]
[CharLinkedList of size 15 <<fif51PMOC51PMOC>>]
[CharLinkedList of size 16 <<tfif51PMOC51PMOC>>]
[CharLinkedList of size 17 <<etfif51PMOC51PMOC>>]
[CharLinkedList of size 18 <<eetfif51PMOC51PMOC>>]
[CharLinkedList of size 19 <<neetfif51PMOC51PMOC>>]
[CharLinkedList of size 20 <<Cneetfif51PMOC51PMOC>>]
[CharLinkedList of size 21 <<OCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 22 <<MOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 23 <<PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 24 <<1PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 25 <<51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 26 <<f51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 27 <<if51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 28 <<fif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 29 <<tfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 30 <<etfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 31 <<eetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 32 <<neetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 33 <<Cneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 34 <<OCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 35 <<MOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 36 <<PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 37 <<1PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 38 <<51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 39 <<f51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 40 <<if51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 41 <<fif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 42 <<tfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 43 <<etfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 44 <<eetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 45 <<neetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 46 <<Cneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 47 <<OCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 48 <<MOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 49 <<PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 50 <<1PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 51 <<51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 52 <<f51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 53 <<if51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 54 <<fif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 55 <<tfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 56 <<etfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 57 <<eetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 58 <<neetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 59 <<Cneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 60 <<OCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 61 <<MOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 62 <<PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 63 <<1PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 64 <<51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 65 <<f51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 66 <<if51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 67 <<fif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 68 <<tfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 69 <<etfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 70 <<eetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 71 <<neetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOCneetfif51PMOC51PMOC>>]
[CharLinkedList of size 72 <<Cneetfif51PMOCneetfif51PMOCneetfif51PMOCnee//---------- End of your output for main11.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main11.cpp (first 5000 characters): 
659a660,662
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main11.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
=31418==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31418==    by 0x401298: CharLinkedList::firstNode(char) (CharLinkedList.cpp:96)
==31418==    by 0x401C99: CharLinkedList::pushAtFront(char) (CharLinkedList.cpp:252)
==31418==    by 0x402460: main (main11.cpp:22)
==31418== 
==31418== 43 bytes in 1 blocks are possibly lost in loss record 2 of 7
==31418==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31418==    by 0x4EFF798: allocate (new_allocator.h:104)
==31418==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31418==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31418==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31418==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31418==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31418==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31418==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31418==    by 0x401833: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31418==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31418==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31418==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31418==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31418==    by 0x4025B1: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31418== 
==31418== 96 bytes in 4 blocks are still reachable in loss record 3 of 7
==31418==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31418==    by 0x401B4A: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:214)
==31418==    by 0x401CAD: CharLinkedList::pushAtFront(char) (CharLinkedList.cpp:255)
==31418==    by 0x402460: main (main11.cpp:22)
==31418== 
==31418== 144 bytes in 1 blocks are possibly lost in loss record 4 of 7
==31418==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31418==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31418==    by 0x40181D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31418==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31418==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31418==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31418==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31418==    by 0x4025B1: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31418== 
==31418== 3,600 bytes in 150 blocks are still reachable in loss record 5 of 7
==31418==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31418==    by 0x401B4A: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:214)
==31418==    by 0x401CAD: CharLinkedList::pushAtFront(char) (CharLinkedList.cpp:255)
==31418==    by 0x40251F: main (main11.cpp:38)
==31418== 
==31418== 4,128 bytes in 172 blocks are still reachable in loss record 6 of 7
==31418==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31418==    by 0x401B4A: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:214)
==31418==    by 0x401CAD: CharLinkedList::pushAtFront(char) (CharLinkedList.cpp:255)
==31418==    by 0x402568: main (main11.cpp:43)
==31418== 
==31418== 72,704 bytes in 1 blocks are still reachable in loss record 7 of 7
==31418==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31418==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31418==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31418==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31418==    by 0x400F1E2: call_init (dl-init.c:82)
==31418==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31418==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31418== 
==31418== LEAK SUMMARY:
==31418==    definitely lost: 0 bytes in 0 blocks
==31418==    indirectly lost: 0 bytes in 0 blocks
==31418==      possibly lost: 187 bytes in 2 blocks
==31418==    still reachable: 80,552 bytes in 328 blocks
==31418==                       of which reachable via heuristic:
==31418==                         stdstring          : 43 bytes in 1 blocks
==31418==         suppressed: 0 bytes in 0 blocks
==31418== 
==31418== For counts of detected and suppressed errors, rerun with: -v
==31418== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main11.cpp **********

********** Testing main12.cpp **********
// Tests insertAt()
main12.cpp Failed!
//---------- test program code: main12.cpp ----------
// Tests insertAt()

//
// COMP15 HW2 TEST 12
// Tests insertAt()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"


int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};
    char fifteen[7] = {'f', 'i', 'f', 't', 'e', 'e', 'n'};

    CharLinkedList linkedListOne(comp, 6);
    // Should Print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListOne.print();

    //test insertAt()
    std::cout << "Testing insertAt\n";
    //start inserting inside the size() ( < size())
    for (int i = 0; i < 7; ++i) {
        linkedListOne.insertAt(fifteen[i],(i*i)%linkedListOne.size());
        linkedListOne.print();
        // the end result should print the following lines
        // [CharLinkedList of size 7 <<fCOMP15>>]
        // [CharLinkedList of size 8 <<fiCOMP15>>]
        // [CharLinkedList of size 9 <<fiCOfMP15>>]
        // [CharLinkedList of size 10 <<tfiCOfMP15>>]
        // [CharLinkedList of size 11 <<tfiCOfeMP15>>]
        // [CharLinkedList of size 12 <<tfieCOfeMP15>>]
        // [CharLinkedList of size 13 <<ntfieCOfeMP15>>]
    }

    //insert char at size() (insert at end)
    linkedListOne.insertAt('A',linkedListOne.size());
    // Should Print - [CharLinkedList of size 14 <<ntfieCOfeMP15A>>]
    linkedListOne.print();

    //insert char out of bounds index = linkedListOne.size()+5
    //Should print - index_out_of_range
    try {
        linkedListOne.insertAt('B', linkedListOne.size()+1);
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }

    //remove at out of bounds index = -1
    //Should print - index_out_of_range
    try {
        linkedListOne.insertAt('B', -1);
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main12.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
Testing insertAt
[CharLinkedList of size 7 <<fCOMP15>>]
[CharLinkedList of size 8 <<fiCOMP15>>]
[CharLinkedList of size 9 <<fiCOfMP15>>]
[CharLinkedList of size 10 <<tfiCOfMP15>>]
[CharLinkedList of size 11 <<tfiCOfeMP15>>]
[CharLinkedList of size 12 <<tfieCOfeMP15>>]
[CharLinkedList of size 13 <<ntfieCOfeMP15>>]
[CharLinkedList of size 14 <<ntfieCOfeMP15A>>]
index_out_of_range
index_out_of_range
//---------- End of expected output for main12.cpp.

//---------- Your output for main12.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
Testing insertAt
[CharLinkedList of size 7 <<fCOMP15>>]
[CharLinkedList of size 8 <<fiCOMP15>>]
[CharLinkedList of size 9 <<fiCOfMP15>>]
[CharLinkedList of size 10 <<tfiCOfMP15>>]
[CharLinkedList of size 11 <<tfiCOfeMP15>>]
[CharLinkedList of size 12 <<tfieCOfeMP15>>]
[CharLinkedList of size 13 <<ntfieCOfeMP15>>]
[CharLinkedList of size 14 <<ntfieCOfeMP15A>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main12.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main12.cpp (first 5000 characters): 
10a11,12
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
12a15
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main12.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
   by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31465==    by 0x40250E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31465==    by 0x4015D8: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31465==    by 0x402860: main (main12.cpp:65)
==31465== 
==31465== HEAP SUMMARY:
==31465==     in use at exit: 73,035 bytes in 9 blocks
==31465==   total heap usage: 22 allocs, 13 frees, 73,633 bytes allocated
==31465== 
==31465== 24 bytes in 1 blocks are still reachable in loss record 1 of 6
==31465==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31465==    by 0x401D1E: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31465==    by 0x40266F: main (main12.cpp:40)
==31465== 
==31465== 43 bytes in 1 blocks are possibly lost in loss record 2 of 6
==31465==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31465==    by 0x4EFF798: allocate (new_allocator.h:104)
==31465==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31465==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31465==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31465==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31465==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31465==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31465==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31465==    by 0x4019A3: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31465==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31465==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31465==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31465==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31465==    by 0x402860: main (main12.cpp:65)
==31465== 
==31465== 48 bytes in 2 blocks are still reachable in loss record 3 of 6
==31465==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31465==    by 0x401D69: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:234)
==31465==    by 0x402613: main (main12.cpp:27)
==31465== 
==31465== 72 bytes in 3 blocks are still reachable in loss record 4 of 6
==31465==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31465==    by 0x401D1E: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31465==    by 0x4015A3: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31465==    by 0x40150C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31465==    by 0x402588: main (main12.cpp:19)
==31465== 
==31465== 144 bytes in 1 blocks are possibly lost in loss record 5 of 6
==31465==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31465==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31465==    by 0x40198D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31465==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31465==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31465==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31465==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31465==    by 0x402860: main (main12.cpp:65)
==31465== 
==31465== 72,704 bytes in 1 blocks are still reachable in loss record 6 of 6
==31465==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31465==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31465==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31465==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31465==    by 0x400F1E2: call_init (dl-init.c:82)
==31465==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31465==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31465== 
==31465== LEAK SUMMARY:
==31465==    definitely lost: 0 bytes in 0 blocks
==31465==    indirectly lost: 0 bytes in 0 blocks
==31465==      possibly lost: 187 bytes in 2 blocks
==31465==    still reachable: 72,848 bytes in 7 blocks
==31465==                       of which reachable via heuristic:
==31465==                         stdstring          : 43 bytes in 1 blocks
==31465==         suppressed: 0 bytes in 0 blocks
==31465== 
==31465== For counts of detected and suppressed errors, rerun with: -v
==31465== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main12.cpp **********

********** Testing main13.cpp **********
// Tests insertInOrder()
main13.cpp Failed!
//---------- test program code: main13.cpp ----------
// Tests insertInOrder()

//
// COMP15 HW2 TEST 13
// Tests insertInOrder()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char fifteen[7] = {'f', 'i', 'f', 't', 'e', 'e', 'n'};

    CharLinkedList linkedListOne(fifteen, 7);
    // Should Print - [CharLinkedList of size 7 <<fifteen>>]
    linkedListOne.print();

    //test insertInOrder()
    std::cout << "Testing insertInOrder\n";

    //start inserting in order
    linkedListOne.insertInOrder('m');
    // Should Print - [CharLinkedList of size 8 <<fifmteen>>]
    linkedListOne.print();

    linkedListOne.insertInOrder('z');
    // Should Print - [CharLinkedList of size 9 <<fifmteenz>>]
    linkedListOne.print();

    linkedListOne.insertInOrder('b');
    // Should Print - [CharLinkedList of size 10 <<bfifmteenz>>]
    linkedListOne.print();

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main13.cpp (first 5000 characters): 
[CharLinkedList of size 7 <<fifteen>>]
Testing insertInOrder
[CharLinkedList of size 8 <<fifmteen>>]
[CharLinkedList of size 9 <<fifmteenz>>]
[CharLinkedList of size 10 <<bfifmteenz>>]
//---------- End of expected output for main13.cpp.

//---------- Your output for main13.cpp (first 5000 characters): 
[CharLinkedList of size 7 <<fifteen>>]
Testing insertInOrder
[CharLinkedList of size 8 <<mfifteen>>]
[CharLinkedList of size 9 <<zmfifteen>>]
[CharLinkedList of size 10 <<bzmfifteen>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main13.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main13.cpp (first 5000 characters): 
3,5c3,8
< [CharLinkedList of size 8 <<fifmteen>>]
< [CharLinkedList of size 9 <<fifmteenz>>]
< [CharLinkedList of size 10 <<bfifmteenz>>]
---
> [CharLinkedList of size 8 <<mfifteen>>]
> [CharLinkedList of size 9 <<zmfifteen>>]
> [CharLinkedList of size 10 <<bzmfifteen>>]
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main13.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
hrowing an instance of 'std::range_error'
  what():  index_out_of_range
==31515== 
==31515== Process terminating with default action of signal 6 (SIGABRT)
==31515==    at 0x56FD1D7: raise (raise.c:56)
==31515==    by 0x56FE8C7: abort (abort.c:90)
==31515==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31515==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31515==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31515==    by 0x40239E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31515==    by 0x401468: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31515==    by 0x4024A5: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31515== 
==31515== HEAP SUMMARY:
==31515==     in use at exit: 72,987 bytes in 7 blocks
==31515==   total heap usage: 14 allocs, 7 frees, 73,163 bytes allocated
==31515== 
==31515== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==31515==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31515==    by 0x4EFF798: allocate (new_allocator.h:104)
==31515==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31515==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31515==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31515==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31515==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31515==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31515==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31515==    by 0x401833: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31515==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31515==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31515==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31515==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31515==    by 0x4024A5: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31515== 
==31515== 96 bytes in 4 blocks are still reachable in loss record 2 of 4
==31515==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31515==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31515==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31515==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31515==    by 0x402408: main (main13.cpp:17)
==31515== 
==31515== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31515==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31515==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31515==    by 0x40181D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31515==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31515==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31515==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31515==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31515==    by 0x4024A5: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31515== 
==31515== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31515==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31515==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31515==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31515==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31515==    by 0x400F1E2: call_init (dl-init.c:82)
==31515==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31515==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31515== 
==31515== LEAK SUMMARY:
==31515==    definitely lost: 0 bytes in 0 blocks
==31515==    indirectly lost: 0 bytes in 0 blocks
==31515==      possibly lost: 187 bytes in 2 blocks
==31515==    still reachable: 72,800 bytes in 5 blocks
==31515==                       of which reachable via heuristic:
==31515==                         stdstring          : 43 bytes in 1 blocks
==31515==         suppressed: 0 bytes in 0 blocks
==31515== 
==31515== For counts of detected and suppressed errors, rerun with: -v
==31515== Use --track-origins=yes to see where uninitialised values come from
==31515== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main13.cpp **********

********** Testing main14.cpp **********
// Tests popFromFront()
main14.cpp Failed!
//---------- test program code: main14.cpp ----------
// Tests popFromFront()

//
// COMP15 HW2 TEST 14
// Tests popFromFront()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main(){

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    CharLinkedList linkedListOne(comp, 3);
    //Should print - [CharLinkedList of size 3 <<COM>>]
    linkedListOne.print();

    //test popfromfront
    std::cout << "Testing popFromFront\n";

    //removes 1 element and should print remaining
    linkedListOne.popFromFront();
    //Should print - [CharLinkedList of size 2 <<OM>>]
    linkedListOne.print();

    linkedListOne.popFromFront();
    //Should print - [CharLinkedList of size 1 <<M>>]
    linkedListOne.print();

    linkedListOne.popFromFront();
    //Should print - [CharLinkedList of size 0 <<>>]
    linkedListOne.print();

    //pop empty linkedList
    //Should print - linkedList_is_empty
    try {
        linkedListOne.popFromFront();
    } catch(std::runtime_error) {
        std::cout << "linkedList_is_empty\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }
}
//---------- end test program code ----------

//---------- Expected output for main14.cpp (first 5000 characters): 
[CharLinkedList of size 3 <<COM>>]
Testing popFromFront
[CharLinkedList of size 2 <<OM>>]
[CharLinkedList of size 1 <<M>>]
[CharLinkedList of size 0 <<>>]
linkedList_is_empty
//---------- End of expected output for main14.cpp.

//---------- Your output for main14.cpp (first 5000 characters): 
[CharLinkedList of size 3 <<COM>>]
Testing popFromFront
[CharLinkedList of size 1 <<O>>]
[CharLinkedList of size 0 <<>>]
terminate called after throwing an instance of 'std::runtime_error'
  what():  sequence_is_empty
GOT SIGNAL 6 ./hw2
//---------- End of your output for main14.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main14.cpp (first 5000 characters): 
3,4c3
< [CharLinkedList of size 2 <<OM>>]
< [CharLinkedList of size 1 <<M>>]
---
> [CharLinkedList of size 1 <<O>>]
6c5,7
< linkedList_is_empty
---
> terminate called after throwing an instance of 'std::runtime_error'
>   what():  sequence_is_empty
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main14.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
==31563== Memcheck, a memory error detector
==31563== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31563== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31563== Command: ./hw2
==31563== 
[CharLinkedList of size 3 <<COM>>]
Testing popFromFront
[CharLinkedList of size 1 <<O>>]
[CharLinkedList of size 0 <<>>]
terminate called after throwing an instance of 'std::runtime_error'
  what():  sequence_is_empty
==31563== 
==31563== Process terminating with default action of signal 6 (SIGABRT)
==31563==    at 0x56FD1D7: raise (raise.c:56)
==31563==    by 0x56FE8C7: abort (abort.c:90)
==31563==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31563==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31563==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31563==    by 0x4EC0B68: __cxa_throw (eh_throw.cc:87)
==31563==    by 0x4019FC: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:160)
==31563==    by 0x401702: CharLinkedList::removeAt(int) (CharLinkedList.cpp:114)
==31563==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31563==    by 0x402592: main (main14.cpp:33)
==31563== 
==31563== HEAP SUMMARY:
==31563==     in use at exit: 72,914 bytes in 4 blocks
==31563==   total heap usage: 7 allocs, 3 frees, 72,994 bytes allocated
==31563== 
==31563== 24 bytes in 1 blocks are still reachable in loss record 1 of 4
==31563==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31563==    by 0x401CCE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31563==    by 0x401553: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31563==    by 0x4014BC: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31563==    by 0x402527: main (main14.cpp:17)
==31563== 
==31563== 42 bytes in 1 blocks are possibly lost in loss record 2 of 4
==31563==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31563==    by 0x4EFF798: allocate (new_allocator.h:104)
==31563==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31563==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31563==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31563==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31563==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31563==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31563==    by 0x4019D4: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:160)
==31563==    by 0x401702: CharLinkedList::removeAt(int) (CharLinkedList.cpp:114)
==31563==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31563==    by 0x402592: main (main14.cpp:33)
==31563== 
==31563== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31563==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31563==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31563==    by 0x4019BE: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:160)
==31563==    by 0x401702: CharLinkedList::removeAt(int) (CharLinkedList.cpp:114)
==31563==    by 0x401C26: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31563==    by 0x402592: main (main14.cpp:33)
==31563== 
==31563== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31563==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31563==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31563==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31563==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31563==    by 0x400F1E2: call_init (dl-init.c:82)
==31563==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31563==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31563== 
==31563== LEAK SUMMARY:
==31563==    definitely lost: 0 bytes in 0 blocks
==31563==    indirectly lost: 0 bytes in 0 blocks
==31563==      possibly lost: 186 bytes in 2 blocks
==31563==    still reachable: 72,728 bytes in 2 blocks
==31563==                       of which reachable via heuristic:
==31563==                         stdstring          : 42 bytes in 1 blocks
==31563==         suppressed: 0 bytes in 0 blocks
==31563== 
==31563== For counts of detected and suppressed errors, rerun with: -v
==31563== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main14.cpp **********

********** Testing main15.cpp **********
// Tests popFromBack()
main15.cpp Passed!
Running valgrind to check for memory leaks.
No memory leaks!
********** Done Testing main15.cpp **********

********** Testing main16.cpp **********
// Tests removeAt()
main16.cpp Failed!
//---------- test program code: main16.cpp ----------
// Tests removeAt()

//
// COMP15 HW2 TEST 16
// Tests removeAt()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    CharLinkedList linkedListOne(comp, 6);
    //Should print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListOne.print();

    //test removeAt()
    std::cout << "Testing removeAt\n";

    //removes an element and should print remaining linkedList
    linkedListOne.removeAt(3);
    //Should print - [CharLinkedList of size 5 <<COM15>>]
    linkedListOne.print();

    linkedListOne.removeAt(0);
    //Should print - [CharLinkedList of size 4 <<OM15>>]
    linkedListOne.print();

    linkedListOne.removeAt(linkedListOne.size()-1);
    //Should print - [CharLinkedList of size 3 <<OM1>>]
    linkedListOne.print();

    //remove at out of bounds index = -1
    //Should print - index_out_of_range
    try {
        linkedListOne.removeAt(-1);
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }

    //remove at out of bounds index = size() + 1
    //Should print - index_out_of_range
    try {
        linkedListOne.removeAt(linkedListOne.size()+1);
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main16.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
Testing removeAt
[CharLinkedList of size 5 <<COM15>>]
[CharLinkedList of size 4 <<OM15>>]
[CharLinkedList of size 3 <<OM1>>]
index_out_of_range
index_out_of_range
//---------- End of expected output for main16.cpp.

//---------- Your output for main16.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
Testing removeAt
[CharLinkedList of size 5 <<COM15>>]
[CharLinkedList of size 3 <<OM1>>]
[CharLinkedList of size 2 <<OM>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main16.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main16.cpp (first 5000 characters): 
4d3
< [CharLinkedList of size 4 <<OM15>>]
5a5,7
> [CharLinkedList of size 2 <<OM>>]
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
7a10
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main16.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
harLinkedList(char*, int) (CharLinkedList.cpp:58)
==31649==    by 0x402577: main (main16.cpp:17)
==31649== 
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
index_out_of_range
==31649== 
==31649== Process terminating with default action of signal 6 (SIGABRT)
==31649==    at 0x56FD1D7: raise (raise.c:56)
==31649==    by 0x56FE8C7: abort (abort.c:90)
==31649==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31649==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31649==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31649==    by 0x40250E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31649==    by 0x4015D8: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31649==    by 0x4027F6: main (main16.cpp:58)
==31649== 
==31649== HEAP SUMMARY:
==31649==     in use at exit: 72,939 bytes in 5 blocks
==31649==   total heap usage: 14 allocs, 10 frees, 73,441 bytes allocated
==31649== 
==31649== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==31649==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31649==    by 0x4EFF798: allocate (new_allocator.h:104)
==31649==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31649==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31649==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31649==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31649==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31649==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31649==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31649==    by 0x4019A3: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31649==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31649==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31649==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31649==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31649==    by 0x4027F6: main (main16.cpp:58)
==31649== 
==31649== 48 bytes in 2 blocks are still reachable in loss record 2 of 4
==31649==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31649==    by 0x401D1E: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31649==    by 0x4015A3: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31649==    by 0x40150C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31649==    by 0x402577: main (main16.cpp:17)
==31649== 
==31649== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31649==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31649==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31649==    by 0x40198D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31649==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31649==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31649==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31649==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31649==    by 0x4027F6: main (main16.cpp:58)
==31649== 
==31649== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31649==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31649==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31649==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31649==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31649==    by 0x400F1E2: call_init (dl-init.c:82)
==31649==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31649==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31649== 
==31649== LEAK SUMMARY:
==31649==    definitely lost: 0 bytes in 0 blocks
==31649==    indirectly lost: 0 bytes in 0 blocks
==31649==      possibly lost: 187 bytes in 2 blocks
==31649==    still reachable: 72,752 bytes in 3 blocks
==31649==                       of which reachable via heuristic:
==31649==                         stdstring          : 43 bytes in 1 blocks
==31649==         suppressed: 0 bytes in 0 blocks
==31649== 
==31649== For counts of detected and suppressed errors, rerun with: -v
==31649== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main16.cpp **********

********** Testing main17.cpp **********
// Tests replaceAt()
main17.cpp Failed!
//---------- test program code: main17.cpp ----------
// Tests replaceAt()

//
// COMP15 HW2 TEST 17
// Tests replaceAt()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"

int main() {

    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};

    CharLinkedList linkedListOne(comp, 6);
    //Should print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListOne.print();

    //test replaceAt()
    std::cout << "Testing replaceAt\n";

    //replaces an element and should print resulting linkedList
    linkedListOne.replaceAt('p', 3);
    //Should print - [CharLinkedList of size 6 <<COMp15>>]
    linkedListOne.print();

    //replaces first element and should print resulting linkedList
    linkedListOne.replaceAt('c', 0);
    //Should print - [CharLinkedList of size 6 <<cOMp15>>]
    linkedListOne.print();

    //replaces last element and should print resulting linkedList
    linkedListOne.replaceAt('f', linkedListOne.size() - 1);
    //Should print - [CharLinkedList of size 6 <<cOMp1f>>]
    linkedListOne.print();

    //replace at out of bounds index = -1
    //Should print - index_out_of_range
    try {
        linkedListOne.replaceAt('p', -1);
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }

    //replace at out of bounds index = 10
    //Should print - index_out_of_range
    try {
        linkedListOne.replaceAt('p', linkedListOne.size() + 1);
    } catch (std::range_error) {
        std::cout << "index_out_of_range\n";
    } catch(...) {
        std::cout << "Incorrect Exception Thrown\n";
    }

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main17.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
Testing replaceAt
[CharLinkedList of size 6 <<COMp15>>]
[CharLinkedList of size 6 <<cOMp15>>]
[CharLinkedList of size 6 <<cOMp1f>>]
index_out_of_range
index_out_of_range
//---------- End of expected output for main17.cpp.

//---------- Your output for main17.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
Testing replaceAt
[CharLinkedList of size 6 <<COMp15>>]
[CharLinkedList of size 6 <<cOMp15>>]
[CharLinkedList of size 6 <<cOMp1f>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main17.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main17.cpp (first 5000 characters): 
5a6,7
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
7a10
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main17.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
LinkedList of size 6 <<COMp15>>]
[CharLinkedList of size 6 <<cOMp15>>]
[CharLinkedList of size 6 <<cOMp1f>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
index_out_of_range
index_out_of_range
==31696== 
==31696== Process terminating with default action of signal 6 (SIGABRT)
==31696==    at 0x56FD1D7: raise (raise.c:56)
==31696==    by 0x56FE8C7: abort (abort.c:90)
==31696==    by 0x4EC28AC: __gnu_cxx::__verbose_terminate_handler() (vterminate.cc:95)
==31696==    by 0x4EC0905: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:47)
==31696==    by 0x4EC0950: std::terminate() (eh_terminate.cc:57)
==31696==    by 0x40250E: __clang_call_terminate (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31696==    by 0x4015D8: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31696==    by 0x40280F: main (main17.cpp:60)
==31696== 
==31696== HEAP SUMMARY:
==31696==     in use at exit: 72,939 bytes in 5 blocks
==31696==   total heap usage: 14 allocs, 9 frees, 73,441 bytes allocated
==31696== 
==31696== 43 bytes in 1 blocks are possibly lost in loss record 1 of 4
==31696==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31696==    by 0x4EFF798: allocate (new_allocator.h:104)
==31696==    by 0x4EFF798: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (basic_string.tcc:1051)
==31696==    by 0x4EFF8A6: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31696==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31696==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31696==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31696==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31696==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31696==    by 0x4019A3: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31696==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31696==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31696==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31696==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31696==    by 0x40280F: main (main17.cpp:60)
==31696== 
==31696== 48 bytes in 2 blocks are still reachable in loss record 2 of 4
==31696==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31696==    by 0x401D1E: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31696==    by 0x4015A3: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31696==    by 0x40150C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31696==    by 0x402577: main (main17.cpp:17)
==31696== 
==31696== 144 bytes in 1 blocks are possibly lost in loss record 3 of 4
==31696==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31696==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31696==    by 0x40198D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31696==    by 0x4016B5: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31696==    by 0x401C76: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31696==    by 0x401611: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31696==    by 0x4015C0: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31696==    by 0x40280F: main (main17.cpp:60)
==31696== 
==31696== 72,704 bytes in 1 blocks are still reachable in loss record 4 of 4
==31696==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31696==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31696==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31696==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31696==    by 0x400F1E2: call_init (dl-init.c:82)
==31696==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31696==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31696== 
==31696== LEAK SUMMARY:
==31696==    definitely lost: 0 bytes in 0 blocks
==31696==    indirectly lost: 0 bytes in 0 blocks
==31696==      possibly lost: 187 bytes in 2 blocks
==31696==    still reachable: 72,752 bytes in 3 blocks
==31696==                       of which reachable via heuristic:
==31696==                         stdstring          : 43 bytes in 1 blocks
==31696==         suppressed: 0 bytes in 0 blocks
==31696== 
==31696== For counts of detected and suppressed errors, rerun with: -v
==31696== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main17.cpp **********

********** Testing main18.cpp **********
// Tests concatenate()
main18.cpp Failed!
//---------- test program code: main18.cpp ----------
// Tests concatenate()

//
// COMP15 HW2 TEST 18
// Tests concatenate()
//
// Created by vbilol01 on 12/26/16.
//

#include <iostream>
#include "CharLinkedList.h"


int main() {
    char comp[6] = {'C', 'O', 'M', 'P', '1', '5'};
    char fifteen[7] = {'f', 'i', 'f', 't', 'e', 'e', 'n'};

    CharLinkedList linkedListComp(comp, 6);
    CharLinkedList linkedListFifteen(fifteen, 7);
    CharLinkedList linkedListEmpty;

    //before
    //Should print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListComp.print();
    //Should print - [CharLinkedList of size 7 <<fifteen>>]
    linkedListFifteen.print();
    //Should print - [CharLinkedList of size 0 <<>>]
    linkedListEmpty.print();

    //test concatenate()
    std::cout << "Testing concatenate\n";

    //test nonempty with empty
    linkedListComp.concatenate(&linkedListEmpty);
    //Should print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListComp.print();

    //test empty with nonempty
    linkedListEmpty.concatenate(&linkedListComp);
    //Should print - [CharLinkedList of size 6 <<COMP15>>]
    linkedListEmpty.print();

    //test empty with empty
    linkedListComp.concatenate(&linkedListFifteen);
    //Should print - [CharLinkedList of size 13 <<COMP15fifteen>>]
    linkedListComp.print();

    //test on self
    linkedListEmpty.concatenate(&linkedListEmpty);
    //Should print - [CharLinkedList of size 13 <<COMP15COMP15>>]
    linkedListEmpty.print();

    return 0;
}
//---------- end test program code ----------

//---------- Expected output for main18.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 7 <<fifteen>>]
[CharLinkedList of size 0 <<>>]
Testing concatenate
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 13 <<COMP15fifteen>>]
[CharLinkedList of size 12 <<COMP15COMP15>>]
//---------- End of expected output for main18.cpp.

//---------- Your output for main18.cpp (first 5000 characters): 
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 7 <<fifteen>>]
[CharLinkedList of size 0 <<>>]
Testing concatenate
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 6 <<COMP15>>]
[CharLinkedList of size 13 <<COMP15fifteen>>]
[CharLinkedList of size 12 <<COMP15COMP15>>]
terminate called after throwing an instance of 'std::range_error'
  what():  index_out_of_range
GOT SIGNAL 6 ./hw2
//---------- End of your output for main18.cpp.
(I'm not sure what type of error it was.
You can check http://goo.gl/reLHm8 and see what
Unix Signal $6 stands for)

//---------- diff for main18.cpp (first 5000 characters): 
8a9,11
> terminate called after throwing an instance of 'std::range_error'
>   what():  index_out_of_range
> GOT SIGNAL 6 ./hw2
//---------- End of diff for main18.cpp.
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
llocator<char> const&, std::forward_iterator_tag) [clone .part.28] (basic_string.tcc:582)
==31769==    by 0x4F01505: _S_construct_aux<char const*> (basic_string.h:4141)
==31769==    by 0x4F01505: _S_construct<char const*> (basic_string.h:4162)
==31769==    by 0x4F01505: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (basic_string.tcc:659)
==31769==    by 0x4EE5BA5: std::runtime_error::runtime_error(char const*) (cow-stdexcept.cc:74)
==31769==    by 0x4EE5BC8: std::range_error::range_error(char const*) (cow-stdexcept.cc:77)
==31769==    by 0x401833: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31769==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31769==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31769==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31769==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31769==    by 0x402529: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31769== 
==31769== 96 bytes in 4 blocks are still reachable in loss record 6 of 11
==31769==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31769==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31769==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31769==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31769==    by 0x402411: main (main18.cpp:18)
==31769== 
==31769== 120 bytes in 5 blocks are still reachable in loss record 7 of 11
==31769==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31769==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31769==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31769==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31769==    by 0x402423: main (main18.cpp:19)
==31769== 
==31769== 120 bytes in 5 blocks are still reachable in loss record 8 of 11
==31769==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31769==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31769==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31769==    by 0x4022B1: CharLinkedList::concatenate(CharLinkedList*) (CharLinkedList.cpp:406)
==31769==    by 0x402500: main (main18.cpp:49)
==31769== 
==31769== 144 bytes in 1 blocks are possibly lost in loss record 9 of 11
==31769==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31769==    by 0x4EBF72F: __cxa_allocate_exception (eh_alloc.cc:253)
==31769==    by 0x40181D: CharLinkedList::throwexception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (CharLinkedList.cpp:156)
==31769==    by 0x401545: CharLinkedList::removeAt(int) (CharLinkedList.cpp:111)
==31769==    by 0x401B06: CharLinkedList::popFromFront() (CharLinkedList.cpp:201)
==31769==    by 0x4014A1: CharLinkedList::clear() (CharLinkedList.cpp:276)
==31769==    by 0x401450: CharLinkedList::~CharLinkedList() (CharLinkedList.cpp:73)
==31769==    by 0x402529: main (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31769== 
==31769== 168 bytes in 7 blocks are still reachable in loss record 10 of 11
==31769==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31769==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31769==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31769==    by 0x4022B1: CharLinkedList::concatenate(CharLinkedList*) (CharLinkedList.cpp:406)
==31769==    by 0x4024DB: main (main18.cpp:44)
==31769== 
==31769== 72,704 bytes in 1 blocks are still reachable in loss record 11 of 11
==31769==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31769==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31769==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31769==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31769==    by 0x400F1E2: call_init (dl-init.c:82)
==31769==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31769==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31769== 
==31769== LEAK SUMMARY:
==31769==    definitely lost: 0 bytes in 0 blocks
==31769==    indirectly lost: 0 bytes in 0 blocks
==31769==      possibly lost: 187 bytes in 2 blocks
==31769==    still reachable: 73,304 bytes in 26 blocks
==31769==                       of which reachable via heuristic:
==31769==                         stdstring          : 43 bytes in 1 blocks
==31769==         suppressed: 0 bytes in 0 blocks
==31769== 
==31769== For counts of detected and suppressed errors, rerun with: -v
==31769== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
GOT SIGNAL 6 valgrind
********** Done Testing main18.cpp **********

********** Testing main19.cpp **********
// Tests shrink()
main19.cpp Passed!
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
==31824== Memcheck, a memory error detector
==31824== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31824== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31824== Command: ./hw2
==31824== 
[CharLinkedList of size 7 <<fifteen>>]
Testing shrink
[CharLinkedList of size 7 <<fifteen>>]
==31824== 
==31824== HEAP SUMMARY:
==31824==     in use at exit: 72,776 bytes in 4 blocks
==31824==   total heap usage: 8 allocs, 4 frees, 72,872 bytes allocated
==31824== 
==31824== 48 bytes in 2 blocks are indirectly lost in loss record 1 of 3
==31824==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31824==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31824==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31824==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31824==    by 0x402408: main (main19.cpp:19)
==31824== 
==31824== 72 (24 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==31824==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31824==    by 0x401BAE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31824==    by 0x401433: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31824==    by 0x40139C: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31824==    by 0x402408: main (main19.cpp:19)
==31824== 
==31824== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==31824==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31824==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31824==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31824==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31824==    by 0x400F1E2: call_init (dl-init.c:82)
==31824==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31824==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31824== 
==31824== LEAK SUMMARY:
==31824==    definitely lost: 24 bytes in 1 blocks
==31824==    indirectly lost: 48 bytes in 2 blocks
==31824==      possibly lost: 0 bytes in 0 blocks
==31824==    still reachable: 72,704 bytes in 1 blocks
==31824==         suppressed: 0 bytes in 0 blocks
==31824== 
==31824== For counts of detected and suppressed errors, rerun with: -v
==31824== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 3 from 3)
********** Done Testing main19.cpp **********

********** Testing main20.cpp **********
// Tests find()
main20.cpp Passed!
Running valgrind to check for memory leaks.
valgrind reported errors!
//---------- valgrind output (last 5000 characters): 
==31881== Memcheck, a memory error detector
==31881== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31881== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31881== Command: ./hw2
==31881== 
[CharLinkedList of size 7 <<fifteen>>]
Testing find
1
1
1
==31881== Conditional jump or move depends on uninitialised value(s)
==31881==    at 0x402352: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:426)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x402391: CharLinkedList::searchEngine(CharLinkedList::CharNode*, char) (CharLinkedList.cpp:433)
==31881==    by 0x4023D1: CharLinkedList::find(char) (in /comp/15/grading/hw2/odayok01.5/tests/hw2)
==31881==    by 0x40258C: main (main20.cpp:35)
==31881== 
0
==31881== 
==31881== HEAP SUMMARY:
==31881==     in use at exit: 72,776 bytes in 4 blocks
==31881==   total heap usage: 8 allocs, 4 frees, 72,872 bytes allocated
==31881== 
==31881== 48 bytes in 2 blocks are indirectly lost in loss record 1 of 3
==31881==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31881==    by 0x401BFE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31881==    by 0x401483: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31881==    by 0x4013EC: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31881==    by 0x40245B: main (main20.cpp:18)
==31881== 
==31881== 72 (24 direct, 48 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==31881==    at 0x4C28098: operator new(unsigned long) (vg_replace_malloc.c:333)
==31881==    by 0x401BFE: CharLinkedList::insertAt(char, int) (CharLinkedList.cpp:223)
==31881==    by 0x401483: CharLinkedList::pushAtBack(char) (CharLinkedList.cpp:394)
==31881==    by 0x4013EC: CharLinkedList::CharLinkedList(char*, int) (CharLinkedList.cpp:58)
==31881==    by 0x40245B: main (main20.cpp:18)
==31881== 
==31881== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==31881==    at 0x4C27B90: malloc (vg_replace_malloc.c:299)
==31881==    by 0x4EBD17F: pool (eh_alloc.cc:117)
==31881==    by 0x4EBD17F: __static_initialization_and_destruction_0 (eh_alloc.cc:244)
==31881==    by 0x4EBD17F: _GLOBAL__sub_I_eh_alloc.cc (eh_alloc.cc:307)
==31881==    by 0x400F1E2: call_init (dl-init.c:82)
==31881==    by 0x400F1E2: _dl_init (dl-init.c:131)
==31881==    by 0x4001219: ??? (in /usr/lib64/ld-2.17.so)
==31881== 
==31881== LEAK SUMMARY:
==31881==    definitely lost: 24 bytes in 1 blocks
==31881==    indirectly lost: 48 bytes in 2 blocks
==31881==      possibly lost: 0 bytes in 0 blocks
==31881==    still reachable: 72,704 bytes in 1 blocks
==31881==         suppressed: 0 bytes in 0 blocks
==31881== 
==31881== For counts of detected and suppressed errors, rerun with: -v
==31881== Use --track-origins=yes to see where uninitialised values come from
==31881== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 3 from 3)
********** Done Testing main20.cpp **********

********** Testing main21.cpp **********
// Tests sort()
----------Program main21.cpp did not compile.----------
//---------- clang++ output for main21.cpp: 
make[1]: Entering directory `/comp/15/grading/hw2/odayok01.5/tests'
clang++ -g -Wall -Wextra -std=c++11   -c -o CharLinkedList.o CharLinkedList.cpp
clang++ -g -Wall -Wextra -std=c++11   -c -o main21.o main21.cpp
main21.cpp:32:21: error: no member named 'sort' in 'CharLinkedList'
    linkedListEmpty.sort();
    ~~~~~~~~~~~~~~~ ^
main21.cpp:37:19: error: no member named 'sort' in 'CharLinkedList'
    linkedListOne.sort();
    ~~~~~~~~~~~~~ ^
main21.cpp:42:23: error: no member named 'sort' in 'CharLinkedList'
    linkedListFifteen.sort();
    ~~~~~~~~~~~~~~~~~ ^
3 errors generated.
make[1]: *** [main21.o] Error 1
make[1]: Leaving directory `/comp/15/grading/hw2/odayok01.5/tests'
//---------- End of clang++ output for main21.cpp.
main21.cpp Failed!

********** Testing main22.cpp **********
// Tests slice()
----------Program main22.cpp did not compile.----------
//---------- clang++ output for main22.cpp: 
make[1]: Entering directory `/comp/15/grading/hw2/odayok01.5/tests'
clang++ -g -Wall -Wextra -std=c++11   -c -o CharLinkedList.o CharLinkedList.cpp
clang++ -g -Wall -Wextra -std=c++11   -c -o main22.o main22.cpp
main22.cpp:33:48: error: no member named 'slice' in 'CharLinkedList'
        linkedListSliceEmpty = linkedListEmpty.slice(0, 1);
                               ~~~~~~~~~~~~~~~ ^
main22.cpp:44:57: error: no member named 'slice' in 'CharLinkedList'
    CharLinkedList *linkedListSliceOne = linkedListComp.slice(1, 7);
                                         ~~~~~~~~~~~~~~ ^
main22.cpp:50:57: error: no member named 'slice' in 'CharLinkedList'
    CharLinkedList *linkedListSliceTwo = linkedListComp.slice(5, 1);
                                         ~~~~~~~~~~~~~~ ^
3 errors generated.
make[1]: *** [main22.o] Error 1
make[1]: Leaving directory `/comp/15/grading/hw2/odayok01.5/tests'
//---------- End of clang++ output for main22.cpp.
main22.cpp Failed!

*/*/*/*/*/ Some of the tests failed! /*/*/*/*/*
Tests that failed: main03.cpp, valgrind(main03.cpp), main05.cpp, valgrind(main05.cpp), main06.cpp, valgrind(main06.cpp), main07.cpp, valgrind(main07.cpp), main08.cpp, valgrind(main08.cpp), main09.cpp, valgrind(main09.cpp), main10.cpp, valgrind(main10.cpp), main11.cpp, valgrind(main11.cpp), main12.cpp, valgrind(main12.cpp), main13.cpp, valgrind(main13.cpp), main14.cpp, valgrind(main14.cpp), main16.cpp, valgrind(main16.cpp), main17.cpp, valgrind(main17.cpp), main18.cpp, valgrind(main18.cpp), valgrind(main19.cpp), valgrind(main20.cpp), 



//@@                       at 2017-02-10 00:30:41
//@@ ======== SUBMISSION SCREENING END =====

...done preparing for testing.
provide started by odayok01 on Fri Feb 10 00:30:41 2017
your submission has been accepted!
cleaning up after testing...
Cleaning up...
...done cleaning up after testing
your submission is complete!
